<?xml version="1.0" encoding="UTF-8" ?>
<correntistas>
	 <conta agencia="0123-4">
		  <tipo>física</tipo>
		<nome>José Maria</nome>
		  <numero>000.000-00</numero>
	</conta>

	<conta agencia="5678-9">
		 <tipo>jurídica</tipo>
	 	<nome>José Maria SA</nome>
		 <numero>111.111-11</numero>
	</conta>
</correntistas>


<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
</head>
<body>
	<p id="result"></p>
	<script type="text/javascript">
	
		//Cria o XML visto no código acima no formato de string JS
		var xmlString = '<?xml version="1.0" encoding="UTF-8" ?>  \
		<correntistas> \
			<conta agencia="0123-4"> <tipo>física</tipo> \
				<nome>José Maria</nome> <numero>000.000-00</numero> \
			</conta> \
			<conta agencia="5678-9"> <tipo>jurídica</tipo> \
				<nome>José Maria SA</nome> <numero>111.111-11</numero> \
			</conta> \
		</correntistas>';

		//Converte a string acima para um documento XML válido
		var parser = new DOMParser();
		var xmlDoc = parser.parseFromString(xmlString, "text/xml");

		//Chamada a função responsável por coletar e exibir dados do XML
		manipulaXML(xmlDoc);

		function manipulaXML(xml) {
			document.getElementById("result").innerHTML =
				xml.getElementsByTagName("nome")[0].childNodes[0].nodeValue;
		}
	</script>
</body>
</html>


<!--Como visto no código, foi criada uma string JS que, em seguida, foi transformada em um documento XML válido. Estando nesse formato, foi possível manipular o seu conteúdo por meio do DOM. Com o método “getElementsByTagName” e as propriedades “childNodes” e “nodeValue”, foi acessado o conteúdo do primeiro elemento <nome> e atribuído o seu valor à tag HTML <p>, para exibição do resultado na tela.
-->